import type {
  chatbot_attempt_POST,
  chatbot_attempt_message_POST
} from '../post_types';

interface GetAttempt {
  cbm_id: number;
  completed_at: Date | null;
  id: number;
  last_accessed: Date;
  started_at: Date;
  user_id: number;
}

// The functions below use the API generated by Prisma to interact with the database

/** Creates a unique chat attempt and returns it's attempt_id as a promise */
async function storeChatAttempt(
  userId: number,
  cbmId: number
): Promise<number> {
  let getAttempt: GetAttempt;
  const attempt: chatbot_attempt_POST = {
    user_id: userId,
    cbm_id: cbmId
  };

  console.log(attempt);
  const result = await fetch('/api/chatbot-attempts', {
    method: 'POST',
    body: JSON.stringify(attempt)
  });

  getAttempt = (await result.json()) as GetAttempt;

  return getAttempt.id as number;
}

async function storeMessage(
  attemptId: number,
  messageText: string,
  messageType: chatbot_attempt_message_POST['message_type']
) {
  let message: chatbot_attempt_message_POST = {
    attempt_id: attemptId,
    text: messageText,
    message_type: messageType
  };

  console.log(message);
  const result = await fetch('/api/chatbot-messages', {
    method: 'POST',
    body: JSON.stringify(message)
  });

  console.log(result);
}

export { storeChatAttempt, storeMessage };
